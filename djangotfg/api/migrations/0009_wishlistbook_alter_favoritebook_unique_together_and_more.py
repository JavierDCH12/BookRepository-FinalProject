# Generated by Django 5.1.6 on 2025-03-29 09:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0008_favoritebook_rating'),
    ]

    operations = [
        migrations.CreateModel(
            name='WishlistBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_key', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(blank=True, max_length=255, null=True)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('cover_url', models.URLField(blank=True, null=True)),
                ('genres', models.JSONField(blank=True, default=list)),
                ('first_publish_year', models.IntegerField(blank=True, null=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='favoritebook',
            unique_together={('user', 'book_key')},
        ),
        migrations.AlterField(
            model_name='favoritebook',
            name='review',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddIndex(
            model_name='favoritebook',
            index=models.Index(fields=['user', 'book_key'], name='api_favorit_user_id_d00753_idx'),
        ),
        migrations.AddIndex(
            model_name='favoritebook',
            index=models.Index(fields=['book_key'], name='api_favorit_book_ke_b96335_idx'),
        ),
        migrations.AddField(
            model_name='wishlistbook',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='wishlistbook',
            unique_together={('user', 'book_key')},
        ),
    ]
